package edu.ycp.cs.netcoder.client.ace;

import com.google.gwt.core.client.JavaScriptObject;
import com.google.gwt.user.client.ui.HTML;

/**
 * A GWT widget for the Ajax.org Code Editor (ACE).
 * 
 * @see <a href="http://ace.ajax.org/">Ajax.org Code Editor</a>
 */
public class AceEditor extends HTML {
	// Used to generate unique element ids for Ace widgets.
	private static int nextId = 0;
	
	private String elementId;
	
	private JavaScriptObject editor;
	
	/**
	 * Constructor.
	 */
	public AceEditor() {
		elementId = "_aceGWT" + nextId;
		nextId++;
		setHTML("<div style=\"width: 100%; height: 100%;\" id=\"" + elementId + "\"></div>");
	}
	
	/**
	 * Call this method to start the editor.
	 * Make sure that the widget has been attached to the page
	 * before calling this method.
	 */
	public native void startEditor() /*-{
		this.@edu.ycp.cs.netcoder.client.ace.AceEditor::editor =
			$wnd.ace.edit(this.@edu.ycp.cs.netcoder.client.ace.AceEditor::elementId);
	}-*/;
	
	/**
	 * Set the theme.
	 * 
	 * @param themeName the theme name (e.g., "twilight")
	 */
	public native void setTheme(String themeName) /*-{
		var editor = this.@edu.ycp.cs.netcoder.client.ace.AceEditor::editor;
		editor.setTheme("ace/theme/" + themeName);
	}-*/;

	/**
	 * Set the mode.
	 * 
	 * @param mode the mode (one of the values in the
	 *             {@link AceEditorMode} enumeration)
	 */
	public native void setMode(AceEditorMode mode) /*-{
		//setModeImpl(editor, "ace/mode/" + mode.getName());
		var editor = this.@edu.ycp.cs.netcoder.client.ace.AceEditor::editor;
		var shortModeName = mode.@edu.ycp.cs.netcoder.client.ace.AceEditorMode::name;
		var modeName = "ace/mode/" + shortModeName;
		var TheMode = $wnd.require(modeName).Mode;
		editor.getSession().setMode(new TheMode());
	}-*/;
	
	/**
	 * Register a handler for change events generated by the editor.
	 * 
	 * @param callback the change event handler
	 */
	public native void addOnChangeHandler(AceEditorCallback callback) /*-{
		var editor = this.@edu.ycp.cs.netcoder.client.ace.AceEditor::editor;
		editor.getSession().on("change", function(e) {
			callback.@edu.ycp.cs.netcoder.client.ace.AceEditorCallback::invokeAceCallback(Lcom/google/gwt/core/client/JavaScriptObject;)(e);
		});
	}-*/;
	
	/**
	 * Set font size.
	 */
	public native void setFontSize(String fontSize) /*-{
		var elementId = this.@edu.ycp.cs.netcoder.client.ace.AceEditor::elementId;
		var elt = $doc.getElementById(elementId);
		elt.style.fontSize = fontSize;
	}-*/;
	
	/**
	 * Get the complete text in the editor as a String.
	 * 
	 * @return the text in the editor
	 */
	public native String getText() /*-{
		var editor = this.@edu.ycp.cs.netcoder.client.ace.AceEditor::editor;
		return editor.getSession().getValue();
	}-*/;
	
	/**
	 * Set the complete text in the editor from a String.
	 * 
	 * @param text the text to set in the editor
	 */
	public native void setText(String text) /*-{
		var editor = this.@edu.ycp.cs.netcoder.client.ace.AceEditor::editor;
		editor.getSession().setValue(text);
	}-*/;
}
